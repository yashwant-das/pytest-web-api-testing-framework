name: Python CI Tests

on:
  push:
    branches: [ main, master, develop ] # Or just [ main ] if that's your primary branch
  pull_request:
    branches: [ main, master, develop ] # Or just [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11'] # Consider adding '3.12' if your deps support it

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # Caches dependencies for faster builds

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Browsers (Chrome, Firefox) are usually pre-installed on ubuntu-latest runners.
        # webdriver-manager will download the drivers.

    - name: Create .env file for CI
      run: |
        echo "Creating .env file for CI environment..."
        echo "SAUCE_USERNAME=${{ secrets.SAUCE_USERNAME }}" > config/.env
        echo "SAUCE_PASSWORD=${{ secrets.SAUCE_PASSWORD }}" >> config/.env
        echo "BOOKER_USERNAME=${{ secrets.BOOKER_USERNAME }}" >> config/.env
        echo "BOOKER_PASSWORD=${{ secrets.BOOKER_PASSWORD }}" >> config/.env
        echo "TEST_ENV=ci" >> config/.env # This will use config/config_ci.json for overrides
      env:
        SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
        SAUCE_PASSWORD: ${{ secrets.SAUCE_PASSWORD }}
        BOOKER_USERNAME: ${{ secrets.BOOKER_USERNAME }}
        BOOKER_PASSWORD: ${{ secrets.BOOKER_PASSWORD }}

    # Optional: Run Linters/Formatters as a CI check
    # - name: Lint and Format Check (isort, black, flake8)
    #   if: success() || failure() # Run even if previous steps fail, to see lint issues
    #   run: |
    #     echo "Running isort check..."
    #     isort . --check-only --diff
    #     echo "Running black check..."
    #     black . --check --diff
    #     echo "Running flake8 check..."
    #     flake8 .

    - name: Run Pytest tests
      run: |
        pytest --alluredir=reports/allure-results

    - name: Generate Allure report history
      if: always() # Run even if tests fail to ensure history is captured
      uses: actions/checkout@v4
      continue-on-error: true # Don't fail build if gh-pages doesn't exist yet or history is missing
      with:
        ref: gh-pages
        path: gh-pages

    - name: Generate Allure Report
      if: always() # Run even if tests fail to get the report
      uses: simple-elf/allure-report-action@v1.7 # Or check for newer versions of this action
      with:
        allure_results: reports/allure-results
        allure_history: allure-history # from the gh-pages checkout
        gh_pages: gh-pages # target branch for report history and optionally the report itself
        allure_report: allure-report # output directory for the generated HTML report

    - name: Deploy Allure Report to GitHub Pages
      if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') # Deploy only on pushes to main/master
      uses: peaceiris/actions-gh-pages@v3 # Or check for newer versions
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }} # Automatically provided by GitHub Actions
        publish_dir: ./allure-report # Directory where the Allure HTML report was generated
        # Optional: Customize commit user for GitHub Pages deployment
        # user_name: 'github-actions[bot]'
        # user_email: 'github-actions[bot]@users.noreply.github.com'
        # force_orphan: true # Creates a clean gh-pages branch without history from main
        # cname: your.custom.domain.com # If you have a custom domain for GitHub Pages

    - name: Upload Allure results as artifact
      if: always() # Good for retaining raw results for debugging
      uses: actions/upload-artifact@v4 # Updated to latest version
      with:
        name: allure-results-py${{ matrix.python-version }} # Clear artifact naming
        path: reports/allure-results
        retention-days: 7 # Optional: how long to keep the artifact
